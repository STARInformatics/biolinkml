id: http://w3id.org/biolink/biolinkml/meta
title: Biolink Schema Metamodel
name: metamodel
description: A metamodel for defining biolink related schemas
license: https://creativecommons.org/publicdomain/zero/1.0/
version: 1.1.1

prefixes:
  meta: http://w3id.org/biolink/biolinkml/meta/
  skos: http://www.w3.org/2004/02/skos/core#
  OIO: http://www.geneontology.org/formats/oboInOwl#
  pav: http://purl.org/pav/

default_prefix: meta
default_range: string

default_curi_maps:
    - semweb_context

emit_prefixes:
  - meta
  - rdf
  - rdfs
  - xsd
  - skos
  - dcterms
  - OIO
  - owl
  - pav

imports:
  - includes/types

subsets:
  owl:
    description: Set of slots that appear in the OWL representation of a model


#==================================
# Slots                           #
#==================================
slots:

  # -----------------------------------
  # Common metadata shared by all elements
  # -----------------------------------
  name:
    key: true
    identifier: true
    description: >-
      the unique name of the element within the context of the schema.  Name is combined with the default prefix to
      form the globally unique subject of the target class.
    slot_uri: rdfs:label
    in_subset:
      - owl

  description:
    description: a description of the element's purpose and use
    slot_uri: skos:definition
    in_subset:
      - owl

  aliases:
    range: string
    multivalued: true
    slot_uri: skos:altLabel

  mappings:
    range: uriorcuri
    multivalued: true
    description: >-
      A list of terms from different schemas or terminology systems that have comparable meaning.
      These may include terms that are precisely equivalent, broader or narrower in meaning, or otherwise semantically
      related but not equivalent from a strict ontological perspective.
    slot_uri: skos:mappingRelation

  deprecated:
    range: string
    description: Description of why and when this element will no longer be used

  todos:
    range: string
    description: Outstanding issue that needs resolution
    multivalued: true

  notes:
    multivalued: true
    description: editorial notes about an element intended for internal consumption
    slot_uri: skos:editorialNote
    in_subset:
      - owl

  comments:
    multivalued: true
    description: notes and comments about an element intended for external consumption
    slot_uri: skos:note
    in_subset:
      - owl

  examples:
    multivalued: true
    range: example
    inlined: true
    description: example usages of an element
    slot_uri: skos:example
    in_subset:
      - owl

  in_subset:
    multivalued: true
    range: subset_definition
    description: >-
      used to indicate membership of a term in a defined subset of biolink terms used for a particular domain
      or application (e.g. the translator_minimal subset holding the minimal set of predicates used in a
      translator knowledge graph)
    slot_uri: OIO:inSubset

  from_schema:
    range: schema_definition
    readonly: supplied by the schema loader
    description: id of the schema that defined the element
    slot_uri: skos:inScheme

  imported_from:
    range: string
    readonly: supplied by the schema loader
    description: the imports entry that this element was derived from.  Empty means primary source

  see_also:
    multivalued: true
    range: uri
    description: a reference
    slot_uri: rdfs:seeAlso
    in_subset:
      - owl


  # --------------------------------------------------------------
  # Slots that are common to slot definition and class definition
  # --------------------------------------------------------------
  is_a:
    range: definition
    abstract: true
    description: >-
      specifies single-inheritance between classes or slots.
      While multiple inheritance is not allowed, mixins can be provided effectively providing the same thing.
      The semantics are the same when translated to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI
      framework (e.g. java classes, python classes) then is a is used.
      When translating a framework without polymorphism (e.g. json-schema, solr document schema) then is a and mixins
      are recursively unfolded

  abstract:
    range: boolean
    description: >-
      an abstract class is a high level class or slot that is typically used to group common slots together and cannot
      be directly instantiated.

#  local names:
#    multivalued: true
##    description: map from local identifier to slot
#    notes:
#      - get this properly documented -- it is a map from an identifier to a slot name

  mixin:
    range: boolean
    description: this slot or class can only be used as a mixin -- equivalent to abstract

  mixins:
    multivalued: true
    range: definition
    description: List of definitions to be mixed in. Targets may be any definition of the same type

  apply_to:
    multivalued: true
    range: definition
    description: >-
      Used to extend class or slot definitions. For example, if we have a core schema where a gene has two slots for
      identifier and symbol, and we have a specialized schema for my_organism where we wish to add a slot
      systematic_name, we can avoid subclassing by defining a class gene_my_organism, adding the slot to this class,
      and then adding an apply_to pointing to the gene class. The new slot will be 'injected into' the gene class.

#  values from:
#    multivalued: true
##    range: uri
#    description: defines the set of URI's that can fill the range of a slot
#    comments:
#      - >-
#        When a slot range references a class with a value from element, the possible values of the slot range are
#        considered to be all URI's which satisfy the values from target.  Typically this identifies URI's in a
#        given ontology or any subclass of a given node.

  # -----------------------------------
  # Schema definition slots
  # -----------------------------------
  id:
    range: uri
    description: The official schema URI
    required: true

  emit_prefixes:
    multivalued: true
    range: ncname
    description: >-
        a list of Curie prefixes that are used in the representation of instances of the model.  All prefixes in
        this list are added to the prefix sections of the target models.

  title:
    description: the official title of the schema
    slot_uri: dcterms:title
    in_subset:
      - owl

  version:
    description: particular version of schema
    slot_uri: pav:version

  imports:
    range: uri
    multivalued: true
    description: other schemas that are included in this schema

  license:
    description: license for the schema
    slot_uri: dcterms:license
    in_subset:
      - owl

  prefixes:
    multivalued: true
    range: prefix
    inlined: true
    description: prefix / URI definitions to be added to the context beyond those fetched from prefixcommons in id prefixes

  default_curi_maps:
    multivalued: true
    description: ordered list of prefixcommon biocontexts to be fetched to resolve id prefixes and inline prefix variables

  default_prefix:
    range: string
    description: default and base prefix -- used for ':' identifiers, @base and @vocab

  default_range:
    range: definition
    description: default slot range to be used if range element is omitted from a slot definition

  subsets:
    multivalued: true
    range: subset_definition
    inlined: true
    description: list of subsets referenced in this model

  types:
    range: type_definition
    multivalued: true
    inlined: true
    description: data types used in the model

  slot_definitions:
    multivalued: true
    range: slot_definition
    inlined: true
    alias: slots
    description: slot definitions

  classes:
    range: class_definition
    multivalued: true
    inlined: true
    description: class definitions

  metamodel_version:
    readonly: supplied by the schema loader
    description: Version of the metamodel used to load the schema
    in_subset:
      - owl

  source_file:
    readonly: suppplied by the schema loader
    description: name, uri or description of the source of the schema
    in_subset:
      - owl

  source_file_date:
    range: datetime
    readonly: supplied by the loader
    description: modification date of the source of the schema
    in_subset:
      - owl

  source_file_size:
    range: integer
    readonly: supplied by the schema loader
    description: size in bytes of the source of the schema
    in_subset:
      - owl

  generation_date:
    range: datetime
    readonly: supplied by the schema loader
    description: date and time that the schema was loaded/generated
    in_subset:
      - owl


  # -----------------------------------
  # Class definition slots
  # -----------------------------------
  slots:
    multivalued: true
    range: slot_definition
    description: list of slot names that are applicable to a class
    comments:
      - >-
        This defines the set of slots that are allowed to be used for a given class.
        The final list of slots for a class is the
        combination of the parent (is a) slots, mixins slots, apply to slots minus the slot usage entries.
        Formally, 

  slot_usage:
    multivalued: true
    range: slot_definition
    inlined: true
    description: the redefinition of a slot in the context of the containing class definition.
    comments:
      - >-
        Many slots may be re-used across different classes, but the meaning of the slot may be refined by context.
        For example, a generic association model may use slots subject/predicate/object with generic semantics and
        minimal constraints. When this is subclasses, e.g. to disease-phenotype associations then slot usage may
        specify both local naming (e.g. subject=disease) and local constraints

  class_uri:
    range: uri
    description: URI of the class in an RDF environment
    ifabsent: set to <default prefix>:<class name>

#
#  defining slots:
#    multivalued: true
#    range: slot_definition
#    description: >-
#      The combination of is a plus defining slots form a genus-differentia definition, or the set of
#      necessary and sufficient conditions that can be transformed into an OWL equivalence axiom
#
#  entity:
#    domain: class definition
#    range: boolean
#    notes:
#      - needs description

#  subclass of:
#    domain: class definition
#    range: uri
#    description: instances of this class are considered/required to be sub classes of the target URI
#    slot uri: rdfs:subClassOf

  # -----------------------------------
  # Slot definition slots
  # -----------------------------------
  domain:
    range: class_definition
    required: true
    inherited: true
    description: |
      defines the type of the subject of the slot.  Given the following slot definition
        S1:
          domain: C1
          range:  C2
      the declaration
        X:
          S1: Y

      implicitly asserts that X is an instance of C1

  range:
    range: element
    ifabsent: set to default range
    inherited: true
    description: |
      defines the type of the object of the slot.  Given the following slot definition
        S1:
          domain: C1
          range:  C2
      the declaration
        X:
          S1: Y

      implicitly asserts Y is an instance of C2

  slot_uri:
    range: uri
    ifabsent: set to <default prefix>:<slot name>
    description: predicate of this slot for semantic web application

  multivalued:
    range: boolean
    inherited: true
    description: true means that slot can have more than one value

  inherited:
    range: boolean
    inherited: true
    description: true means that the *value* of a slot is inherited by subclasses
    comments:
      - Inherited applies to slot values.  Parent *slots* are always inherited by subclasses

  readonly:
    range: string
    inherited: true
    description: If present, slot is read only.  Text explains why

  ifabsent:
    range: string
    inherited: true
    description: description of special behavior if the slot is absent

  singular_name:
    description: a name that is used in the singular form
    slot_uri: skos:altLabel

  required:
    range: boolean
    inherited: true
    description: true means that the slot must be present in the loaded definition

  inlined:
    range: boolean
    inherited: true
    description: >-
      an inlined definition a list of actual values rather than references.  Only applies to slots whose range is a
      class.

#  definitional:
##    range: boolean
#    description: this slot is a component of a formal definition of the containing class

  key:
    range: boolean
    inherited: true
    description: >-
      true means that the slot uniquely identifies the element within the context of its container.  Key
      slots are NOT identifiers - they do not serve as subjects
    notes:
      - key is inherited
      - a given domain can have at most one key
      - key slots are always required

  identifier:
    range: boolean
    inherited: true
    description: >-
      true means that this slot is the subject of a set of assertions.  Identifiers do not appear as
      predicates in the model
    comments:
      - identifier is inherited
      - identifier slots are always required
      - a given domain can have at most one identifier

  alias:
    description: >-
      the name used for a slot in the context of its owning class.  If present, this is used instead of the actual
      slot name.

#  subproperty of:
##    range: slot_definition
#    description: Ontology property which this slot is a subproperty of
#    slot uri: rdfs:subPropertyOf
#
#  range subclass:
##    range: uri
#    description: Constraint on the range of a property
#    alias: subclass of
#
#  inverse:
##    range: slot_definition
#    description: used to indicate the inverse of a slot (e.g. 'expresses' is the inverse predicate of 'expressed in')
#    slot uri: owl:inverseOf

#  is class field:
##    range: boolean
#    notes:
#      - >-
#        true means that this slot applies to all instances of the containing class (i.e. it is a property of the class
#        itself)
#
#  role:
##    inherited: true
#    notes: >-
#      - the role played by the slot range


  # -----------------------------------
  # Slots for type definition
  # -----------------------------------
  typeof:
    range: type_definition
    description: >-
      Names a parent type
    comments:
      - the target type definition of the typeof slot is referred to as the "parent type"
      - the type definition containing the typeof slot is referred to as the "child type"
      - type definitions without a typeof slot are referred to as a "root type"

  base:
    description: python base type that implements this type definition
    inherited: true
    comments:
      - every root type must have a base
      - the base is inherited by child types but may be overriden.  Base compatibility is not checked.

  type_uri:
    range: uri
    alias: uri
    description: The uri that defines the possible values for the type definition
    comments:
      - uri is typically drawn from the set of URI's defined in OWL (https://www.w3.org/TR/2012/REC-owl2-syntax-20121211/#Datatype_Maps)
      - every root type must have a type uri

  repr:
    range: string
    description: the name of the python object that implements this type definition
    inherited: true
    comments:
      - if not supplied, the model d


  # -----------------------------------
  # Slots for complex type example
  # -----------------------------------
  value:
    description: example value

  value_description:
    alias: description
    description: description of what the value is doing

  # -----------------------------------
  # Slots for complex type prefix
  # -----------------------------------
  local_name:
    range: ncname
    key: true
    description: the nsname (sans ':' for a given prefix)

  prefix_uri:
    range: uri
    required: true
    description: A URI associated with a given prefix

#==================================
# Classes                         #
#==================================
classes:
  element:
    description: a named element in the model
    abstract: true
    slots:
      - name
      - singular_name
      - aliases
      - mappings
      - description
      - deprecated
      - todos
      - notes
      - comments
      - notes
      - examples
      - in_subset
      - from_schema
      - imported_from
      - see_also

  schema_definition:
    description: "a collection of subset, type, slot and class definitions"
    is_a: element
    slots:
      - id
      - title
      - version
      - imports
      - license
      - prefixes
      - emit_prefixes
      - default_curi_maps
      - default_prefix
      - default_range
      - subsets
      - types
      - slot_definitions
      - classes
      - metamodel_version
      - source_file
      - source_file_date
      - source_file_size
      - generation_date
    slot_usage:
      description:
        slot_uri: dcterms:description

  type_definition:
    description: A data type definition.
    is_a: element
    slots:
      - typeof
      - base
      - type_uri
      - repr

  subset_definition:
    description: the name and description of a subset
    is_a: element

  definition:
    description: "base class for definitions"
    abstract: true
    is_a: element
    slots:
      - is_a
      - abstract
      - mixin
      - mixins
      - apply_to

  slot_definition:
    description: the definition of a property or a slot
    is_a: definition
    slots:
      - domain
      - range
      - slot_uri
      - multivalued
      - inherited
      - readonly
      - ifabsent
      - required
      - inlined
      - key
      - identifier
      - alias
    slot_usage:
      is_a:
        range: slot_definition
      mixins:
        range: slot_definition
      apply_to:
        range: slot_definition

  class_definition:
    description: the definition of a class or interface
    is_a: definition
    slots:
      - slots
      - slot_usage
      - class_uri
    slot_usage:
      is_a:
        range: class_definition
      mixins:
        range: class_definition
      apply_to:
        range: class_definition

  prefix:
    description: prefix URI tuple
    slots:
      - local_name
      - prefix_uri

  example:
    description: usage example and description
    slots:
      - value
      - value_description
