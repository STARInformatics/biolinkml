@prefix : <http://w3id.org/biolink/biolinkml/meta/> .
@prefix OIO: <http://www.geneontology.org/formats/oboInOwl#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix metatype: <http://w3id.org/biolink/biolinkml/types/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix pav: <http://purl.org/pav/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[] rdfs:label "metamodel" ;
    dcterms:license "https://creativecommons.org/publicdomain/zero/1.0/" ;
    dcterms:title "Biolink Schema Metamodel" ;
    pav:version "1.1.1" ;
    :classes ( [ rdfs:label "Element" ;
                :abstract true ;
                :class_uri :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :slots ( :name :singular_name :aliases :mappings :description :deprecated :todos :notes :comments :notes :examples :in_subset :from_schema :imported_from :see_also ) ;
                :type "ClassDefinition" ;
                skos:definition "a named element in the model" ] [ rdfs:label "SchemaDefinition" ;
                :class_uri :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :is_a :Element ;
                :slots ( :name :singular_name :aliases :mappings :schema_definition_description :deprecated :todos :comments :notes :examples :in_subset :from_schema :imported_from :see_also :id :title :version :imports :license :prefixes :emit_prefixes :default_curi_maps :default_prefix :default_range :subsets :types :slot_definitions :classes :metamodel_version :source_file :source_file_date :source_file_size :generation_date ) ;
                :type "ClassDefinition" ;
                skos:definition "a collection of subset, type, slot and class definitions" ] [ rdfs:label "TypeDefinition" ;
                :class_uri :TypeDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :is_a :Element ;
                :slots ( :name :singular_name :aliases :mappings :description :deprecated :todos :comments :notes :examples :in_subset :from_schema :imported_from :see_also :typeof :base :type_uri :repr ) ;
                :type "ClassDefinition" ;
                skos:definition "A data type definition." ] [ rdfs:label "SubsetDefinition" ;
                :class_uri :SubsetDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :is_a :Element ;
                :slots ( :name :singular_name :aliases :mappings :description :deprecated :todos :comments :notes :examples :in_subset :from_schema :imported_from :see_also ) ;
                :type "ClassDefinition" ;
                skos:definition "the name and description of a subset" ] [ rdfs:label "Definition" ;
                :abstract true ;
                :class_uri :Definition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :is_a :Element ;
                :slots ( :name :singular_name :aliases :mappings :description :deprecated :todos :comments :notes :examples :in_subset :from_schema :imported_from :see_also :is_a :abstract :mixin :mixins :apply_to ) ;
                :type "ClassDefinition" ;
                skos:definition "base class for definitions" ] [ rdfs:label "SlotDefinition" ;
                :class_uri :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :is_a :Definition ;
                :slots ( :name :singular_name :aliases :mappings :description :deprecated :todos :comments :notes :examples :in_subset :from_schema :imported_from :see_also :slot_definition_is_a :abstract :mixin :slot_definition_mixins :slot_definition_apply_to :domain :range :slot_uri :multivalued :inherited :readonly :ifabsent :required :inlined :key :identifier :alias ) ;
                :type "ClassDefinition" ;
                skos:definition "the definition of a property or a slot" ] [ rdfs:label "ClassDefinition" ;
                :class_uri :ClassDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :is_a :Definition ;
                :slots ( :name :singular_name :aliases :mappings :description :deprecated :todos :comments :notes :examples :in_subset :from_schema :imported_from :see_also :class_definition_is_a :abstract :mixin :class_definition_mixins :class_definition_apply_to :slots :slot_usage :class_uri ) ;
                :type "ClassDefinition" ;
                skos:definition "the definition of a class or interface" ] [ rdfs:label "Prefix" ;
                :class_uri :Prefix ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :slots ( :local_name :prefix_uri ) ;
                :type "ClassDefinition" ;
                skos:definition "prefix URI tuple" ] [ rdfs:label "Example" ;
                :class_uri :Example ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :slots ( :value :value_description ) ;
                :type "ClassDefinition" ;
                skos:definition "usage example and description" ] ) ;
    :default_curi_maps ( "semweb_context" ) ;
    :default_prefix "meta" ;
    :default_range :string ;
    :emit_prefixes "OIO",
        "dcterms",
        "meta",
        "owl",
        "pav",
        "rdf",
        "rdfs",
        "skos",
        "xsd" ;
    :generation_date "2019-03-07 11:05"^^xsd:dateTime ;
    :id <http://w3id.org/biolink/biolinkml/meta> ;
    :imports ( <http://w3id.org/biolink/biolinkml/meta/includes/types> ) ;
    :metamodel_version "1.1.1" ;
    :prefixes ( [ :local_name "meta" ;
                :prefix_uri : ] [ :local_name "skos" ;
                :prefix_uri skos: ] [ :local_name "OIO" ;
                :prefix_uri OIO: ] [ :local_name "pav" ;
                :prefix_uri pav: ] [ :local_name "metatype" ;
                :prefix_uri <http://w3id.org/biolink/biolinkml/type/> ] [ :local_name "xsd" ;
                :prefix_uri xsd: ] ) ;
    :slots ( [ rdfs:label "name" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :identifier true ;
                :in_subset ( :owl ) ;
                :key true ;
                :range :string ;
                :required true ;
                :slot_uri rdfs:label ;
                :type "SlotDefinition" ;
                skos:definition "the unique name of the element within the context of the schema.  Name is combined with the default prefix to form the globally unique subject of the target class." ] [ rdfs:label "description" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :in_subset ( :owl ) ;
                :range :string ;
                :slot_uri skos:definition ;
                :type "SlotDefinition" ;
                skos:definition "a description of the element's purpose and use" ] [ rdfs:label "aliases" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :multivalued true ;
                :range :string ;
                :slot_uri skos:altLabel ;
                :type "SlotDefinition" ] [ rdfs:label "mappings" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :multivalued true ;
                :range :uriorcuri ;
                :slot_uri skos:mappingRelation ;
                :type "SlotDefinition" ;
                skos:definition "A list of terms from different schemas or terminology systems that have comparable meaning. These may include terms that are precisely equivalent, broader or narrower in meaning, or otherwise semantically related but not equivalent from a strict ontological perspective." ] [ rdfs:label "deprecated" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :string ;
                :slot_uri :deprecated ;
                :type "SlotDefinition" ;
                skos:definition "Description of why and when this element will no longer be used" ] [ rdfs:label "todos" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :multivalued true ;
                :range :string ;
                :slot_uri :todos ;
                :type "SlotDefinition" ;
                skos:definition "Outstanding issue that needs resolution" ] [ rdfs:label "notes" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :in_subset ( :owl ) ;
                :multivalued true ;
                :range :string ;
                :slot_uri skos:editorialNote ;
                :type "SlotDefinition" ;
                skos:definition "editorial notes about an element intended for internal consumption" ] [ rdfs:label "comments" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :in_subset ( :owl ) ;
                :multivalued true ;
                :range :string ;
                :slot_uri skos:note ;
                :type "SlotDefinition" ;
                skos:definition "notes and comments about an element intended for external consumption" ] [ rdfs:label "examples" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :in_subset ( :owl ) ;
                :inlined true ;
                :multivalued true ;
                :range :Example ;
                :slot_uri skos:example ;
                :type "SlotDefinition" ;
                skos:definition "example usages of an element" ] [ rdfs:label "in_subset" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :multivalued true ;
                :range :SubsetDefinition ;
                :slot_uri OIO:inSubset ;
                :type "SlotDefinition" ;
                skos:definition "used to indicate membership of a term in a defined subset of biolink terms used for a particular domain or application (e.g. the translator_minimal subset holding the minimal set of predicates used in a translator knowledge graph)" ] [ rdfs:label "from_schema" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :SchemaDefinition ;
                :readonly "supplied by the schema loader" ;
                :slot_uri skos:inScheme ;
                :type "SlotDefinition" ;
                skos:definition "id of the schema that defined the element" ] [ rdfs:label "imported_from" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :string ;
                :readonly "supplied by the schema loader" ;
                :slot_uri :imported_from ;
                :type "SlotDefinition" ;
                skos:definition "the imports entry that this element was derived from.  Empty means primary source" ] [ rdfs:label "see_also" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :in_subset ( :owl ) ;
                :multivalued true ;
                :range :uri ;
                :slot_uri rdfs:seeAlso ;
                :type "SlotDefinition" ;
                skos:definition "a reference" ] [ rdfs:label "is_a" ;
                :abstract true ;
                :domain :Definition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :Definition ;
                :slot_uri :is_a ;
                :type "SlotDefinition" ;
                skos:definition "specifies single-inheritance between classes or slots. While multiple inheritance is not allowed, mixins can be provided effectively providing the same thing. The semantics are the same when translated to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python classes) then is a is used. When translating a framework without polymorphism (e.g. json-schema, solr document schema) then is a and mixins are recursively unfolded" ] [ rdfs:label "abstract" ;
                :domain :Definition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :boolean ;
                :slot_uri :abstract ;
                :type "SlotDefinition" ;
                skos:definition "an abstract class is a high level class or slot that is typically used to group common slots together and cannot be directly instantiated." ] [ rdfs:label "mixin" ;
                :domain :Definition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :boolean ;
                :slot_uri :mixin ;
                :type "SlotDefinition" ;
                skos:definition "this slot or class can only be used as a mixin -- equivalent to abstract" ] [ rdfs:label "mixins" ;
                :domain :Definition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :multivalued true ;
                :range :Definition ;
                :slot_uri :mixins ;
                :type "SlotDefinition" ;
                skos:definition "List of definitions to be mixed in. Targets may be any definition of the same type" ] [ rdfs:label "apply_to" ;
                :domain :Definition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :multivalued true ;
                :range :Definition ;
                :slot_uri :apply_to ;
                :type "SlotDefinition" ;
                skos:definition "Used to extend class or slot definitions. For example, if we have a core schema where a gene has two slots for identifier and symbol, and we have a specialized schema for my_organism where we wish to add a slot systematic_name, we can avoid subclassing by defining a class gene_my_organism, adding the slot to this class, and then adding an apply_to pointing to the gene class. The new slot will be 'injected into' the gene class." ] [ rdfs:label "id" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :uri ;
                :required true ;
                :slot_uri :id ;
                :type "SlotDefinition" ;
                skos:definition "The official schema URI" ] [ rdfs:label "emit_prefixes" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :multivalued true ;
                :range :ncname ;
                :slot_uri :emit_prefixes ;
                :type "SlotDefinition" ;
                skos:definition "a list of Curie prefixes that are used in the representation of instances of the model.  All prefixes in this list are added to the prefix sections of the target models." ] [ rdfs:label "title" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :in_subset ( :owl ) ;
                :range :string ;
                :slot_uri dcterms:title ;
                :type "SlotDefinition" ;
                skos:definition "the official title of the schema" ] [ rdfs:label "version" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :string ;
                :slot_uri pav:version ;
                :type "SlotDefinition" ;
                skos:definition "particular version of schema" ] [ rdfs:label "imports" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :multivalued true ;
                :range :uri ;
                :slot_uri :imports ;
                :type "SlotDefinition" ;
                skos:definition "other schemas that are included in this schema" ] [ rdfs:label "license" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :in_subset ( :owl ) ;
                :range :string ;
                :slot_uri dcterms:license ;
                :type "SlotDefinition" ;
                skos:definition "license for the schema" ] [ rdfs:label "prefixes" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inlined true ;
                :multivalued true ;
                :range :Prefix ;
                :slot_uri :prefixes ;
                :type "SlotDefinition" ;
                skos:definition "prefix / URI definitions to be added to the context beyond those fetched from prefixcommons in id prefixes" ] [ rdfs:label "default_curi_maps" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :multivalued true ;
                :range :string ;
                :slot_uri :default_curi_maps ;
                :type "SlotDefinition" ;
                skos:definition "ordered list of prefixcommon biocontexts to be fetched to resolve id prefixes and inline prefix variables" ] [ rdfs:label "default_prefix" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :string ;
                :slot_uri :default_prefix ;
                :type "SlotDefinition" ;
                skos:definition "default and base prefix -- used for ':' identifiers, @base and @vocab" ] [ rdfs:label "default_range" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :Definition ;
                :slot_uri :default_range ;
                :type "SlotDefinition" ;
                skos:definition "default slot range to be used if range element is omitted from a slot definition" ] [ rdfs:label "subsets" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inlined true ;
                :multivalued true ;
                :range :SubsetDefinition ;
                :slot_uri :subsets ;
                :type "SlotDefinition" ;
                skos:definition "list of subsets referenced in this model" ] [ rdfs:label "types" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inlined true ;
                :multivalued true ;
                :range :TypeDefinition ;
                :slot_uri :types ;
                :type "SlotDefinition" ;
                skos:definition "data types used in the model" ] [ rdfs:label "slot_definitions" ;
                :alias "slots" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inlined true ;
                :multivalued true ;
                :range :SlotDefinition ;
                :slot_uri :slots ;
                :type "SlotDefinition" ;
                skos:definition "slot definitions" ] [ rdfs:label "classes" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inlined true ;
                :multivalued true ;
                :range :ClassDefinition ;
                :slot_uri :classes ;
                :type "SlotDefinition" ;
                skos:definition "class definitions" ] [ rdfs:label "metamodel_version" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :in_subset ( :owl ) ;
                :range :string ;
                :readonly "supplied by the schema loader" ;
                :slot_uri :metamodel_version ;
                :type "SlotDefinition" ;
                skos:definition "Version of the metamodel used to load the schema" ] [ rdfs:label "source_file" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :in_subset ( :owl ) ;
                :range :string ;
                :readonly "suppplied by the schema loader" ;
                :slot_uri :source_file ;
                :type "SlotDefinition" ;
                skos:definition "name, uri or description of the source of the schema" ] [ rdfs:label "source_file_date" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :in_subset ( :owl ) ;
                :range :datetime ;
                :readonly "supplied by the loader" ;
                :slot_uri :source_file_date ;
                :type "SlotDefinition" ;
                skos:definition "modification date of the source of the schema" ] [ rdfs:label "source_file_size" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :in_subset ( :owl ) ;
                :range :integer ;
                :readonly "supplied by the schema loader" ;
                :slot_uri :source_file_size ;
                :type "SlotDefinition" ;
                skos:definition "size in bytes of the source of the schema" ] [ rdfs:label "generation_date" ;
                :domain :SchemaDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :in_subset ( :owl ) ;
                :range :datetime ;
                :readonly "supplied by the schema loader" ;
                :slot_uri :generation_date ;
                :type "SlotDefinition" ;
                skos:definition "date and time that the schema was loaded/generated" ] [ rdfs:label "slots" ;
                :domain :ClassDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :multivalued true ;
                :range :SlotDefinition ;
                :slot_uri :slots ;
                :type "SlotDefinition" ;
                skos:definition "list of slot names that are applicable to a class" ;
                skos:note ( "This defines the set of slots that are allowed to be used for a given class. The final list of slots for a class is the combination of the parent (is a) slots, mixins slots, apply to slots minus the slot usage entries. Formally, " ) ] [ rdfs:label "slot_usage" ;
                :domain :ClassDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inlined true ;
                :multivalued true ;
                :range :SlotDefinition ;
                :slot_uri :slot_usage ;
                :type "SlotDefinition" ;
                skos:definition "the redefinition of a slot in the context of the containing class definition." ;
                skos:note ( "Many slots may be re-used across different classes, but the meaning of the slot may be refined by context. For example, a generic association model may use slots subject/predicate/object with generic semantics and minimal constraints. When this is subclasses, e.g. to disease-phenotype associations then slot usage may specify both local naming (e.g. subject=disease) and local constraints" ) ] [ rdfs:label "class_uri" ;
                :domain :ClassDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :ifabsent "set to <default prefix>:<class name>" ;
                :range :uri ;
                :slot_uri :class_uri ;
                :type "SlotDefinition" ;
                skos:definition "URI of the class in an RDF environment" ] [ rdfs:label "domain" ;
                :domain :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inherited true ;
                :range :ClassDefinition ;
                :required true ;
                :slot_uri :domain ;
                :type "SlotDefinition" ;
                skos:definition """defines the type of the subject of the slot.  Given the following slot definition
  S1:
    domain: C1
    range:  C2
the declaration
  X:
    S1: Y

implicitly asserts that X is an instance of C1
""" ] [ rdfs:label "range" ;
                :domain :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :ifabsent "set to default range" ;
                :inherited true ;
                :range :Element ;
                :slot_uri :range ;
                :type "SlotDefinition" ;
                skos:definition """defines the type of the object of the slot.  Given the following slot definition
  S1:
    domain: C1
    range:  C2
the declaration
  X:
    S1: Y

implicitly asserts Y is an instance of C2
""" ] [ rdfs:label "slot_uri" ;
                :domain :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :ifabsent "set to <default prefix>:<slot name>" ;
                :range :uri ;
                :slot_uri :slot_uri ;
                :type "SlotDefinition" ;
                skos:definition "predicate of this slot for semantic web application" ] [ rdfs:label "multivalued" ;
                :domain :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inherited true ;
                :range :boolean ;
                :slot_uri :multivalued ;
                :type "SlotDefinition" ;
                skos:definition "true means that slot can have more than one value" ] [ rdfs:label "inherited" ;
                :domain :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inherited true ;
                :range :boolean ;
                :slot_uri :inherited ;
                :type "SlotDefinition" ;
                skos:definition "true means that the *value* of a slot is inherited by subclasses" ;
                skos:note ( "Inherited applies to slot values.  Parent *slots* are always inherited by subclasses" ) ] [ rdfs:label "readonly" ;
                :domain :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inherited true ;
                :range :string ;
                :slot_uri :readonly ;
                :type "SlotDefinition" ;
                skos:definition "If present, slot is read only.  Text explains why" ] [ rdfs:label "ifabsent" ;
                :domain :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inherited true ;
                :range :string ;
                :slot_uri :ifabsent ;
                :type "SlotDefinition" ;
                skos:definition "description of special behavior if the slot is absent" ] [ rdfs:label "singular_name" ;
                :domain :Element ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :string ;
                :slot_uri skos:altLabel ;
                :type "SlotDefinition" ;
                skos:definition "a name that is used in the singular form" ] [ rdfs:label "required" ;
                :domain :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inherited true ;
                :range :boolean ;
                :slot_uri :required ;
                :type "SlotDefinition" ;
                skos:definition "true means that the slot must be present in the loaded definition" ] [ rdfs:label "inlined" ;
                :domain :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inherited true ;
                :range :boolean ;
                :slot_uri :inlined ;
                :type "SlotDefinition" ;
                skos:definition "an inlined definition a list of actual values rather than references.  Only applies to slots whose range is a class." ] [ rdfs:label "key" ;
                :domain :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inherited true ;
                :range :boolean ;
                :slot_uri :key ;
                :type "SlotDefinition" ;
                skos:definition "true means that the slot uniquely identifies the element within the context of its container.  Key slots are NOT identifiers - they do not serve as subjects" ;
                skos:editorialNote ( "key is inherited" "a given domain can have at most one key" "key slots are always required" ) ] [ rdfs:label "identifier" ;
                :domain :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inherited true ;
                :range :boolean ;
                :slot_uri :identifier ;
                :type "SlotDefinition" ;
                skos:definition "true means that this slot is the subject of a set of assertions.  Identifiers do not appear as predicates in the model" ;
                skos:note ( "identifier is inherited" "identifier slots are always required" "a given domain can have at most one identifier" ) ] [ rdfs:label "alias" ;
                :domain :SlotDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :string ;
                :slot_uri :alias ;
                :type "SlotDefinition" ;
                skos:definition "the name used for a slot in the context of its owning class.  If present, this is used instead of the actual slot name." ] [ rdfs:label "typeof" ;
                :domain :TypeDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :TypeDefinition ;
                :slot_uri :typeof ;
                :type "SlotDefinition" ;
                skos:definition "Names a parent type" ;
                skos:note ( "the target type definition of the typeof slot is referred to as the \"parent type\"" "the type definition containing the typeof slot is referred to as the \"child type\"" "type definitions without a typeof slot are referred to as a \"root type\"" ) ] [ rdfs:label "base" ;
                :domain :TypeDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inherited true ;
                :range :string ;
                :slot_uri :base ;
                :type "SlotDefinition" ;
                skos:definition "python base type that implements this type definition" ;
                skos:note ( "every root type must have a base" "the base is inherited by child types but may be overriden.  Base compatibility is not checked." ) ] [ rdfs:label "type_uri" ;
                :alias "uri" ;
                :domain :TypeDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :uri ;
                :slot_uri :uri ;
                :type "SlotDefinition" ;
                skos:definition "The uri that defines the possible values for the type definition" ;
                skos:note ( "uri is typically drawn from the set of URI's defined in OWL (https://www.w3.org/TR/2012/REC-owl2-syntax-20121211/#Datatype_Maps)" "every root type must have a type uri" ) ] [ rdfs:label "repr" ;
                :domain :TypeDefinition ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :inherited true ;
                :range :string ;
                :slot_uri :repr ;
                :type "SlotDefinition" ;
                skos:definition "the name of the python object that implements this type definition" ;
                skos:note ( "if not supplied, the model d" ) ] [ rdfs:label "value" ;
                :domain :Example ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :string ;
                :slot_uri :value ;
                :type "SlotDefinition" ;
                skos:definition "example value" ] [ rdfs:label "value_description" ;
                :alias "description" ;
                :domain :Example ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :string ;
                :slot_uri :description ;
                :type "SlotDefinition" ;
                skos:definition "description of what the value is doing" ] [ rdfs:label "local_name" ;
                :domain :Prefix ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :key true ;
                :range :ncname ;
                :required true ;
                :slot_uri :local_name ;
                :type "SlotDefinition" ;
                skos:definition "the nsname (sans ':' for a given prefix)" ] [ rdfs:label "prefix_uri" ;
                :domain :Prefix ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :range :uri ;
                :required true ;
                :slot_uri :prefix_uri ;
                :type "SlotDefinition" ;
                skos:definition "A URI associated with a given prefix" ] [ rdfs:label "schema_definition_description" ;
                :alias "description" ;
                :domain :SchemaDefinition ;
                :is_a :description ;
                :range :string ;
                :slot_uri :description ;
                :type "SlotDefinition" ] [ rdfs:label "slot_definition_is_a" ;
                :alias "is_a" ;
                :domain :SlotDefinition ;
                :is_a :is_a ;
                :range :SlotDefinition ;
                :slot_uri :is_a ;
                :type "SlotDefinition" ] [ rdfs:label "slot_definition_mixins" ;
                :alias "mixins" ;
                :domain :SlotDefinition ;
                :is_a :mixins ;
                :multivalued true ;
                :range :SlotDefinition ;
                :slot_uri :mixins ;
                :type "SlotDefinition" ] [ rdfs:label "slot_definition_apply_to" ;
                :alias "apply_to" ;
                :domain :SlotDefinition ;
                :is_a :apply_to ;
                :multivalued true ;
                :range :SlotDefinition ;
                :slot_uri :apply_to ;
                :type "SlotDefinition" ] [ rdfs:label "class_definition_is_a" ;
                :alias "is_a" ;
                :domain :ClassDefinition ;
                :is_a :is_a ;
                :range :ClassDefinition ;
                :slot_uri :is_a ;
                :type "SlotDefinition" ] [ rdfs:label "class_definition_mixins" ;
                :alias "mixins" ;
                :domain :ClassDefinition ;
                :is_a :mixins ;
                :multivalued true ;
                :range :ClassDefinition ;
                :slot_uri :mixins ;
                :type "SlotDefinition" ] [ rdfs:label "class_definition_apply_to" ;
                :alias "apply_to" ;
                :domain :ClassDefinition ;
                :is_a :apply_to ;
                :multivalued true ;
                :range :ClassDefinition ;
                :slot_uri :apply_to ;
                :type "SlotDefinition" ] ) ;
    :source_file "meta.yaml" ;
    :source_file_date "Thu Mar  7 10:44:08 2019"^^xsd:dateTime ;
    :source_file_size 18592 ;
    :subsets ( [ rdfs:label "owl" ;
                :from_schema <http://w3id.org/biolink/biolinkml/meta> ;
                :type "SubsetDefinition" ;
                skos:definition "Set of slots that appear in the OWL representation of a model" ] ) ;
    :type "SchemaDefinition" ;
    :types ( [ rdfs:label "string" ;
                :base "str" ;
                :from_schema <http://w3id.org/biolink/biolinkml/types> ;
                :imported_from "includes/types" ;
                :type "TypeDefinition" ;
                :uri xsd:string ] [ rdfs:label "integer" ;
                :base "int" ;
                :from_schema <http://w3id.org/biolink/biolinkml/types> ;
                :imported_from "includes/types" ;
                :type "TypeDefinition" ;
                :uri xsd:integer ] [ rdfs:label "boolean" ;
                :base "Bool" ;
                :from_schema <http://w3id.org/biolink/biolinkml/types> ;
                :imported_from "includes/types" ;
                :type "TypeDefinition" ;
                :uri xsd:boolean ;
                skos:definition "A binary (true or false) value" ] [ rdfs:label "float" ;
                :base "float" ;
                :from_schema <http://w3id.org/biolink/biolinkml/types> ;
                :imported_from "includes/types" ;
                :type "TypeDefinition" ;
                :uri xsd:float ] [ rdfs:label "double" ;
                :base "float" ;
                :from_schema <http://w3id.org/biolink/biolinkml/types> ;
                :imported_from "includes/types" ;
                :type "TypeDefinition" ;
                :uri xsd:double ] [ rdfs:label "time" ;
                :base "XSDTime" ;
                :from_schema <http://w3id.org/biolink/biolinkml/types> ;
                :imported_from "includes/types" ;
                :repr "str" ;
                :type "TypeDefinition" ;
                :uri xsd:dateTime ;
                skos:definition "A time object represents a (local) time of day, independent of any particular day" ;
                skos:editorialNote ( "URI is dateTime because OWL reasoners don't work with straight date or time" ) ] [ rdfs:label "date" ;
                :base "XSDDateTime" ;
                :from_schema <http://w3id.org/biolink/biolinkml/types> ;
                :imported_from "includes/types" ;
                :repr "str" ;
                :type "TypeDefinition" ;
                :uri xsd:dateTime ;
                skos:definition "a date (year, month and day) in an idealized calendar" ;
                skos:editorialNote ( "URI is dateTime because OWL reasoners don't work with straight date or time" ) ] [ rdfs:label "datetime" ;
                :base "XSDDate" ;
                :from_schema <http://w3id.org/biolink/biolinkml/types> ;
                :imported_from "includes/types" ;
                :repr "str" ;
                :type "TypeDefinition" ;
                :uri xsd:dateTime ] [ rdfs:label "uriorcuri" ;
                :base "URIorCURIE" ;
                :from_schema <http://w3id.org/biolink/biolinkml/types> ;
                :imported_from "includes/types" ;
                :repr "str" ;
                :type "TypeDefinition" ;
                :uri xsd:anyURI ;
                skos:definition "a URI or a CURIE" ] [ rdfs:label "uri" ;
                :base "URI" ;
                :from_schema <http://w3id.org/biolink/biolinkml/types> ;
                :imported_from "includes/types" ;
                :repr "str" ;
                :type "TypeDefinition" ;
                :uri xsd:anyURI ;
                skos:definition "a complete URI" ] [ rdfs:label "ncname" ;
                :base "NCName" ;
                :from_schema <http://w3id.org/biolink/biolinkml/types> ;
                :imported_from "includes/types" ;
                :repr "str" ;
                :type "TypeDefinition" ;
                :uri xsd:string ;
                skos:definition "Prefix part of CURIE" ] ) ;
    skos:definition "A metamodel for defining biolink related schemas" .



